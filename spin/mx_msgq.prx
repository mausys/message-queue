%X -p consumer_thread
%X -e consumer_get_tail
%X -p producer_thread 
%X -e producer_force_put
%X -e producer_overrun 
%X -e append_msg
%X -e producer_move_tail

%P
init {
    atomic {
        run p_producer_thread();
        run p_consumer_thread()
    }
}

%C
int atomic_compare_exchange_weak(unsigned *object, unsigned *expected, unsigned desired)
{
    if (*object == *expected) {
        *object = desired;
        return 1;
    } else {
        *expected = *object;
        return 0;
    }
}

unsigned atomic_fetch_or(unsigned *object, unsigned arg) 
{
    unsigned old = *object;
    *object |= arg;
    return old;
}


%%
